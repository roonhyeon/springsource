<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<!-- 인증: 현재 사용자가 누구인지 확인하는 과정, 아이디/암호를 이용해서 인증을 주로 처리(폼 로그인 방식) -->

	<bean id="customLoginSuccessHandler" class="com.spring.handler.CustomLoginSuccessHandler"></bean>

	<security:http>
		<!-- 폼 로그인 인증 방식을 선택 -->
		<security:form-login login-page="/security/login" authentication-failure-url="/security/login-error"
		authentication-success-handler-ref="customLoginSuccessHandler"/> <!-- 디폴트 페이지가 이제 더이상 localhost:8080이 아니라 localhost:8080/login 이다. -->
		<!-- 로그아웃 -->
		<security:logout invalidate-session="true" delete-cookies="remember-me, JSESSION_ID"/> <!-- invalidate-session: 자동으로 세션 날라간다. -->
	    <!-- 관리자 페이지, 유저 페이지 접근 권한 -->
	    <security:intercept-url pattern="/security/userpage" access="hasRole('ROLE_USER')"/>
	    <security:intercept-url pattern="/security/adminpage" access="hasRole('ROLE_ADMIN')"/>
	</security:http>
	
	<!-- 비밀번호는 무조건 암호화 상태여야 한다: {noop} => 암호화 하지 말기 -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user1" password="{noop}user1" authorities="ROLE_USER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_USER, ROLE_ADMIN"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
